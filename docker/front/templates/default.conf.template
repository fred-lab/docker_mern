upstream node{
    server node:${APP_PORT};
}

# Uncomment if you want to use websocket
# upstream websocket {
#     server node:${APP_WEBSOCKET_PORT};
# }

server {
    listen 80;
    # Uncomment the line below if you are not behind a reverse proxy like Traefik
    #server_name ${NGINX_DOMAIN};    

    # HEADERS
    proxy_set_header Host $host;
    # X-Real-IP : Forwards the real visitor remote IP address to the proxied server.
    proxy_set_header X-Real-IP $remote_addr;
    # X-Forwarded-Proto : Gives the proxied server information about the schema of the original client request
    proxy_set_header X-Forwarded-Proto $scheme;
    # X-Forwarded-For : contains a list containing the IP addresses of every server the client has been proxied through up to this point
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # Headers for websocket
    # Uncomment if you want to use websocket
    # proxy_http_version 1.1;
    # proxy_set_header Upgrade $http_upgrade;
    # proxy_set_header Connection "Upgrade";

    # Serve static files from Nginx cache, not from NodeJS server
    location / {
        root /home/docker/public;
        try_files $uri $uri/ @nodeserver;
        expires max;
        access_log off;
    }

    location @nodeserver{
        # redirect all request to the NodeJS container and redefine some headers
        # Redirect to the NodeJS container
        proxy_pass http://node;
        proxy_redirect off;
    }

    error_log /var/log/nginx/project_error.log;
    access_log /var/log/nginx/project_access.log;
}